public class Main {
    
    static int firstOcc(int[] arr, int ele, int start, int end ) {
        int ind = -1;
        while(start<=end){
            int mid = (start+end)/2;
            if(arr[mid]==ele){
                ind = mid;
                end = mid-1;
            }
            else if(ele<arr[mid])
                end = mid-1;
            else
                start = mid+1;
        }
        return ind;
    }
    
    static int lastOcc(int[] arr, int ele, int start, int end ) {
        int ind = -1;
        while(start<=end){
            int mid = (start+end)/2;
            if(arr[mid]==ele){
                ind = mid;
                start = mid+1;
            }
            else if(ele<arr[mid])
                end = mid-1;
            else
                start = mid+1;
        }
        return ind;
    }
    
    static int transitionPoint(int[] arr, int start, int end ) {
        int ind = -1;
        while(start<=end){
            int mid = (start+end)/2;
            if(arr[mid]==0)
                start = mid+1;
            else{
                ind = mid;
                end = mid-1;
                }
        }
        return ind;
    }
    
    static int justGreater(int[] arr, int ele, int start, int end ) {
        int ind = -1;
        while(start<=end){
            int mid = (start+end)/2;
            if(arr[mid]<=ele)
                start = mid+1;
            else{
                ind = mid;
                end = mid-1;
                }
        }
        return arr[ind];
    }
    
    public static void main(String[] args) {
        
        //Count of an element in sorted array
        int[] a = {1,1,2,2,3,3};
        int start = 0;
        int end = 5;
        int ele = 2;
        System.out.println(lastOcc(a,ele,start,end) -                                            firstOcc(a,ele,start,end)+1);
        
        //Transition point in binary sorted array
        int[] arr = {0,0,0,0,1,1,1,1};
        System.out.println(transitionPoint(arr,0,7));
        
        //Just greater element in sorted array
        System.out.println(justGreater(a,ele,start,end));


        
    }
}